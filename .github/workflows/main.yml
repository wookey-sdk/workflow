on: push

jobs:
  framac-build:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.release }}
      volumes:
        - /home/runner:/__w/workflow/workflow/build
    strategy:
      fail-fast: false
      matrix:
        release: ["framac/frama-c:21.1", "framac/frama-c:22.0" ] 
    timeout-minutes: 600
    steps:
      - name: checkout libstd
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/libstd
          ref: incoming
          token: ${{ secrets.FRAMAC_SECRET }} 
          path: build/libstd
      - name: checkout libdfu
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/libdfu
          ref: incoming
          token: ${{ secrets.FRAMAC_SECRET }} 
          path: build/libdfu
      - name: checkout libusbctrl
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/libusbctrl
          ref: incoming
          token: ${{ secrets.framac_secret }} 
          path: build/libusbctrl
      - name: checkout usbotghs
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/driver-stm32f4xx-usbotghs
          ref: incoming
          token: ${{ secrets.framac_secret }} 
          path: build/usbotghs
      - name: Proving usbotghs
        run: |
          ls -l;
          cd build/usbotghs;
          curl -o setenv.sh https://raw.githubusercontent.com/wookey-sdk/workflow/master/setenv.sh
          . setenv.sh;
          FRAMAC_TARGET=y make frama-c;
      - name: Proving usbctrl
        run: |
          cd usbctrl;
          . ../../setenv.sh;
          FRAMAC_TARGET=y make frama-c;
      - name: Proving dfu
        run: |
          cd libdfu;
          . ../../setenv.sh;
          FRAMAC_TARGET=y make frama-c;
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: framac-results
          path: |
            build/**/framac/results/*.session
            build/**/framac/results/*.log
