on: push

jobs:
  framac-build:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.release }}
    strategy:
      matrix:
        release: ["framac/frama-c:21.1", "framac/frama-c:22.0" ] 
    timeout-minutes: 600
    steps:
      - name: checkout libstd
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/libstd
          ref: incoming
          token: ${{ secrets.FRAMAC_SECRET }} 
          path: libstd
      - name: checkout libdfu
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/libdfu
          ref: incoming
          token: ${{ secrets.FRAMAC_SECRET }} 
          path: libdfu
      - name: checkout libusbctrl
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/libusbctrl
          ref: incoming
          token: ${{ secrets.framac_secret }} 
          path: libusbctrl
      - name: checkout usbotghs
        uses: actions/checkout@v2
        with:
          repository: wookey-sdk/driver-stm32f4xx-usbotghs
          ref: incoming
          token: ${{ secrets.framac_secret }} 
          path: usbotghs
      - name: Proving usbotghs
        run: |
          cd usbotghs;
          source ../setenv.sh;
          FRAMAC_TARGET=y make frama-c;
      - name: Proving usbctrl
        run: |
          cd usbctrl;
          source ../setenv.sh;
          FRAMAC_TARGET=y make frama-c;
      - name: Proving dfu
        run: |
          cd libdfu;
          source ../setenv.sh;
          FRAMAC_TARGET=y make frama-c;
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: framac-results
          path: |
            **/framac/results/*.session
            **/framac/results/*.log
